- hosts: localhost
  name: Install Camel K Demo
  vars:
    delete_demo: false
    verify_tls: false
    demo_project: demo-camelk-api
    apicurito_project: demo-apicurito
    demo_display_name: Demo Camel K
    demo_description: Project used in Camel K demo
    grafana_user: root
    grafana_password: secret
    enable_logging: true
    enable_user_workload_monitoring: true
  tasks:
    - name: Check Required Parameters
      ansible.builtin.fail:
        msg: "This playbook requires 'server' and 'token' to be defined"
      when:
        - (server is undefined) or (token is undefined) or (server | length == 0) or (token | length == 0)
      ignore_errors: false

    - name: 'Define domain'
      ansible.builtin.set_fact:
        domain: "{{ server | regex_replace('https://api.') | regex_replace(':6443') }}"

    - name: Evaluate Namespace {{ demo_project }}
      when: not delete_demo
      kubernetes.core.k8s:
        api_key: '{{ token }}'
        host: '{{ server }}'
        validate_certs: '{{ verify_tls }}'
        state: present
        kind: Project
        api_version: project.openshift.io/v1
        definition:
          metadata:
            name: "{{ demo_project }}"
            annotations:
              openshift.io/description: "{{ demo_description }}"
              openshift.io/display-name: "{{ demo_display_name }}"

    - name: Evaluate Operator Group
      when: not delete_demo
      kubernetes.core.k8s:
        api_key: '{{ token }}'
        host: '{{ server }}'
        validate_certs: '{{ verify_tls }}'
        state: present
        api_version: operators.coreos.com/v1
        kind: OperatorGroup
        definition:
          metadata:
            name: '{{ demo_project }}-operatorgroup'
            namespace: '{{ demo_project }}'
          spec:
            targetNamespaces:
              - '{{ demo_project }}'

    - name: Include Monitoring role
      ansible.builtin.include_role:
        name: monitoring

    - name: Include Camel K role
      ansible.builtin.include_role:
        name: camel-k

    - name: Delete Namespace {{ demo_project }}
      when: delete_demo | bool
      kubernetes.core.k8s:
        api_key: '{{ token }}'
        host: '{{ server }}'
        validate_certs: '{{ verify_tls }}'
        state: absent
        kind: Project
        api_version: project.openshift.io/v1
        definition:
          metadata:
            name: "{{ demo_project }}"
            annotations:
              openshift.io/description: "{{ demo_description }}"
              openshift.io/display-name: "{{ demo_display_name }}"
